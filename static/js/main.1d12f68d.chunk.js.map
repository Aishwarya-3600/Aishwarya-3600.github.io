{"version":3,"sources":["ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoList","props","useState","done","setDone","text","itemText","setText","class","id","aria-hidden","onClick","onSelect","type","editItem","prompt","App","inputList","setInputList","items","setItems","deleteItems","console","log","oldItems","filter","arrItem","index","placeholder","onChange","event","target","value","map","itemval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAkCeA,G,MAhCE,SAACC,GAAW,IAAD,EACAC,oBAAS,GADT,mBACjBC,EADiB,KACXC,EADW,OAEIF,mBAASD,EAAMI,MAFnB,mBAEjBC,EAFiB,KAEPC,EAFO,KAcxB,OACI,sBAAKC,MAAM,aAAX,UACI,mBAAGA,MAAOL,EAAO,cAAgB,cAAeM,GAAG,QAAQC,cAAY,OAAOC,QAAS,WACnFV,EAAMW,SAASX,EAAMQ,OAEzB,+BACI,oBAAGA,GAAG,OAAN,UAAcH,EAAd,OACA,4BACI,uBAAOO,KAAK,OAAOL,MAAM,qBAAqBC,GAAG,eAEzD,wBAAQD,MAAM,OAAOG,QAhBZ,WACb,IAAIG,EAAWC,OAAO,wBACtBR,GAAQ,WACJ,OAAOO,MAaP,kBAEA,uBAAM,uBAAM,uBACZ,wBAAQN,MAAM,OAAOG,QAxBV,WACfP,GAAQ,WACJ,OAAO,MAsBP,uBCmBGY,EA7CH,WAAO,IAAD,EACkBd,mBAAS,IAD3B,mBACTe,EADS,KACEC,EADF,OAEUhB,mBAAS,IAFnB,mBAETiB,EAFS,KAEFC,EAFE,KAcVC,EAAc,SAACZ,GACnBa,QAAQC,IAAI,UACZH,GAAS,SAACI,GACR,OAAOA,EAASC,QAAO,SAACC,EAASC,GAC/B,OAAOA,IAAUlB,SAKvB,OAEE,qBAAKD,MAAM,OAAX,SACE,sBAAKA,MAAM,cAAX,UACE,uBACA,oBAAIA,MAAM,UAAV,wBACA,uBACA,uBAAOK,KAAK,OAAOe,YAAY,WAAWC,SA3B3B,SAACC,GACpBZ,EAAaY,EAAMC,OAAOC,UA2BtB,wBAAQrB,QAxBM,WAClBS,GAAS,SAACI,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAqBP,OAEvBC,EAAa,KAoBT,iBACA,6BACGC,EAAMc,KAAI,SAACC,EAASP,GACnB,OAAO,cAAC,EAAD,CAAsBlB,GAAIkB,EAAOtB,KAAM6B,EAC5CtB,SAAUS,GADUM,cCzBnBQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1d12f68d.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nconst ToDoList = (props) => {\r\n    const [done, setDone] = useState(false);\r\n    const [itemText, setText] = useState(props.text);\r\n    const markAsDone = () => {\r\n        setDone(() => {\r\n            return true;\r\n        });\r\n    }\r\n    const makeEdit = () => {\r\n        var editItem = prompt(\"Enter editted item: \");\r\n        setText(() => {\r\n            return editItem;\r\n        })\r\n    }\r\n    return (\r\n        <div class=\"todo_style\">\r\n            <i class={done ? \"fa fa-check\" : \"fa fa-times\"} id=\"cross\" aria-hidden=\"true\" onClick={() => {\r\n                props.onSelect(props.id)\r\n            }} />\r\n            <li>\r\n                <p id=\"item\">{itemText} </p>\r\n                <p>\r\n                    <input type=\"time\" class=\"form-control timer\" id=\"start\" />\r\n                </p></li>\r\n            <button class=\"edit\" onClick={makeEdit}>\r\n                Edit</button>\r\n            <br /><br /><br />\r\n            <button class=\"done\" onClick={markAsDone}>Done</button>\r\n        </div>);\r\n\r\n};\r\n\r\nexport default ToDoList;","import './App.css';\r\nimport { useState } from 'react';\r\nimport ToDoList from './ToDoList';\r\nconst App = () => {\r\n  const [inputList, setInputList] = useState(\"\");\r\n  const [items, setItems] = useState([]);\r\n  const addItemEvent = (event) => {\r\n    setInputList(event.target.value);\r\n\r\n  }\r\n  const listOfItems = () => {\r\n    setItems((oldItems) => {\r\n      return [...oldItems, inputList];\r\n    });\r\n    setInputList('');\r\n\r\n  };\r\n  const deleteItems = (id) => {\r\n    console.log(\"delete\");\r\n    setItems((oldItems) => {\r\n      return oldItems.filter((arrItem, index) => {\r\n        return index !== id;\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n\r\n    <div class=\"body\">\r\n      <div class=\"center-body\">\r\n        <br />\r\n        <h1 class=\"heading\"> ToDo List</h1>\r\n        <br />\r\n        <input type=\"text\" placeholder=\"Add Item\" onChange={addItemEvent} />\r\n        <button onClick={listOfItems}> + </button>\r\n        <ol>\r\n          {items.map((itemval, index) => {\r\n            return <ToDoList key={index} id={index} text={itemval}\r\n              onSelect={deleteItems} />\r\n          })}\r\n\r\n        </ol>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}